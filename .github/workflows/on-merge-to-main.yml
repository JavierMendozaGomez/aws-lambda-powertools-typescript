name: on-merge-to-main
on:
  push:
    branches:
      - chore/cicd/automateIntegTests
  workflow_dispatch: {}
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # needed to interact with GitHub's OIDC Token endpoint.
      contents: read
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_PUBLISH_TOKEN }}
        fetch-depth: 0
    #########################    
    # Release new version
    #########################
    - name: "Use NodeJS 14"
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: "Setup npm"
      run: |
        npm set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"
    - name: Install packages
      run: |
        npm ci
        npm run lerna-ci
    - name: Run lint
      run: npm run lerna-lint
    - name: Run tests
      run: npm run lerna-test
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN_TO_ASSUME }}
        aws-region: eu-west-1
    - name: Run integration tests
      run: npm run lerna-test:e2e
    # - name: update release draft
    #   uses: release-drafter/release-drafter@v5.15.0
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # #########################    
    # # Generate documentation
    # #########################
    # - name: Set up Python
    #   uses: actions/setup-python@v2.3.1
    #   with:
    #     python-version: '3.8'
    # - name: Install doc generation dependencies
    #   run: |
    #     pip install --upgrade pip 
    #     pip install -r docs/requirements.txt
    # - name: Setup doc deploy
    #   run: |
    #     git config --global user.name Docs deploy
    #     git config --global user.email docs@dummy.bot.com
    # - name: Build mkdocs site in "gh-pages" branch and push
    #   run: |
    #     rm -rf site
    #     VERSION="dev"
    #     echo "Publishing doc for version: $VERSION"
    #     mkdocs build
    #     mike deploy --push "$VERSION"
    # - name: Build API docs
    #   run: |
    #     rm -rf api
    #     npm run docs-generateApiDoc
    # - name: Release API docs to the released version
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./api
    #     keep_files: true
    #     destination_dir: dev/api
    # - name: Release API docs to the "latest" version
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./api
    #     keep_files: true
    #     destination_dir: latest/api 
